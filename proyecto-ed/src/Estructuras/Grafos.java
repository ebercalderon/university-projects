package Estructuras;

import Entidades.Camino;

public class Grafos {

    public void Floyd(int L[][], int n, int P[][]) {
        int D[][] = new int[13][13];

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                D[i][j] = L[i][j];
                P[i][j] = 0;
            }
        }

        for (int k = 0; k < n; k++) {
            for (int i = 0; i < n; i++) {
                for (int j = 0; j < n; j++) {
                    if ((D[i][k] + D[k][j]) < D[i][j]) {
                        D[i][j] = D[i][k] + D[k][j];
                        P[i][j] = k + 1;
                    }
                }
            }
        }
    }

    public Object caminoMinimo(int inicio) {
        int fin, suma = 0;
        String rpta = "";

        int L[][] = {{0, 600, 310, 99999, 99999, 99999, 99999, 99999, 99999, 99999, 99999, 99999, 99999},
        {600, 0, 99999, 99999, 99999, 99999, 99999, 99999, 410, 99999, 99999, 99999, 99999},
        {310, 99999, 0, 99999, 99999, 99999, 99999, 99999, 99999, 99999, 99999, 99999, 540},
        {99999, 99999, 99999, 0, 920, 99999, 99999, 99999, 99999, 520, 99999, 99999, 99999},
        {99999, 99999, 99999, 920, 0, 99999, 99999, 99999, 99999, 99999, 610, 99999, 99999},
        {99999, 99999, 99999, 99999, 99999, 0, 780, 99999, 810, 99999, 99999, 99999, 99999},
        {99999, 99999, 99999, 99999, 99999, 780, 0, 99999, 99999, 690, 99999, 790, 99999},
        {99999, 99999, 99999, 99999, 99999, 99999, 99999, 0, 99999, 99999, 920, 99999, 99999},
        {99999, 410, 99999, 99999, 99999, 810, 99999, 99999, 0, 99999, 99999, 99999, 99999},
        {99999, 99999, 99999, 520, 99999, 99999, 690, 99999, 99999, 0, 1010, 99999, 480},
        {99999, 99999, 99999, 99999, 610, 99999, 99999, 920, 99999, 1010, 0, 99999, 99999},
        {99999, 99999, 99999, 99999, 99999, 99999, 790, 99999, 99999, 99999, 99999, 0, 99999},
        {99999, 99999, 540, 99999, 99999, 99999, 99999, 99999, 99999, 480, 99999, 99999, 0}};

        int n = 13, ini, fi;
        int P[][] = new int[13][13];

        fin = 13;

        Floyd(L, n, P);

        rpta = fin + " ";

        int cont = 2;

        ini = inicio - 1;
        fi = fin - 1;
        while (P[ini][fi] != 0) {
            cont++;
            rpta = P[ini][fi] + " -> " + rpta;
            fi = P[ini][fi] - 1;
        }
        rpta = inicio + " -> " + rpta;

        int v[] = new int[cont];
        int k = cont - 2;

        ini = inicio - 1;
        fi = fin - 1;

        v[cont - 1] = fi;
        v[0] = ini;

        while (P[ini][fi] != 0) {
            fi = P[ini][fi] - 1;
            v[k] = fi;
            k--;
        }

        for (int i = 0; i < cont - 1; i++) {
            suma = suma + L[v[i]][v[i + 1]];
        }

        Camino c = new Camino(suma, rpta);

        return c;
    }

}
